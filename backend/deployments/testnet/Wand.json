{
  "address": "0xbFAb8c48cd98c81394eb6a5Ba507eEE133FDBD0b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ICauldronGov",
          "name": "cauldron_",
          "type": "address"
        },
        {
          "internalType": "contract ILadleGov",
          "name": "ladle_",
          "type": "address"
        },
        {
          "internalType": "contract IWitchGov",
          "name": "witch_",
          "type": "address"
        },
        {
          "internalType": "contract IPoolFactory",
          "name": "poolFactory_",
          "type": "address"
        },
        {
          "internalType": "contract IJoinFactory",
          "name": "joinFactory_",
          "type": "address"
        },
        {
          "internalType": "contract IFYTokenFactory",
          "name": "fyTokenFactory_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "param",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "Point",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "newAdminRole",
          "type": "bytes4"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURN",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXIT",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "JOIN",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOCK",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOCK8605463013",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT4146650865",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes6",
          "name": "assetId",
          "type": "bytes6"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "addAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes6",
          "name": "seriesId",
          "type": "bytes6"
        },
        {
          "internalType": "bytes6",
          "name": "baseId",
          "type": "bytes6"
        },
        {
          "internalType": "uint32",
          "name": "maturity",
          "type": "uint32"
        },
        {
          "internalType": "bytes6[]",
          "name": "ilkIds",
          "type": "bytes6[]"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "addSeries",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cauldron",
      "outputs": [
        {
          "internalType": "contract ICauldronGov",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fyTokenFactory",
      "outputs": [
        {
          "internalType": "contract IFYTokenFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "roles",
          "type": "bytes4[]"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRoles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinFactory",
      "outputs": [
        {
          "internalType": "contract IJoinFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ladle",
      "outputs": [
        {
          "internalType": "contract ILadleGov",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        }
      ],
      "name": "lockRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes6",
          "name": "assetId",
          "type": "bytes6"
        },
        {
          "internalType": "contract IMultiOracleGov",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "makeBase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes6",
          "name": "baseId",
          "type": "bytes6"
        },
        {
          "internalType": "bytes6",
          "name": "ilkId",
          "type": "bytes6"
        },
        {
          "internalType": "contract IMultiOracleGov",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "ratio",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "max",
          "type": "uint96"
        },
        {
          "internalType": "uint24",
          "name": "min",
          "type": "uint24"
        },
        {
          "internalType": "uint8",
          "name": "dec",
          "type": "uint8"
        }
      ],
      "name": "makeIlk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "param",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "point",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFactory",
      "outputs": [
        {
          "internalType": "contract IPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "roles",
          "type": "bytes4[]"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRoles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "role",
          "type": "bytes4"
        },
        {
          "internalType": "bytes4",
          "name": "adminRole",
          "type": "bytes4"
        }
      ],
      "name": "setRoleAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "witch",
      "outputs": [
        {
          "internalType": "contract IWitchGov",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd16ff3aeab9d366804b314bec56aabab321163a88b45ab839558ef5d4db1d081",
  "receipt": {
    "to": null,
    "from": "0x0B16E3ea120Aeb1DeEbE2Fd8476c6aee8d4F3964",
    "contractAddress": "0xbFAb8c48cd98c81394eb6a5Ba507eEE133FDBD0b",
    "transactionIndex": 1,
    "gasUsed": "2154141",
    "logsBloom": "0x
    "blockHash": "0xd4f7387e123c96933bf9971570ffe2407ba7917f8263c7d778caa2119ebca44b",
    "transactionHash": "0xd16ff3aeab9d366804b314bec56aabab321163a88b45ab839558ef5d4db1d081",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 14826590,
        "transactionHash": "0xd16ff3aeab9d366804b314bec56aabab321163a88b45ab839558ef5d4db1d081",
        "address": "0xbFAb8c48cd98c81394eb6a5Ba507eEE133FDBD0b",
        "topics": [
          "0xe6231789d19137da31d0550f4ba9ee379020a8cfb64cb79bf1790c996d2e6165",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000b16e3ea120aeb1deebe2fd8476c6aee8d4f3964",
          "0x0000000000000000000000000b16e3ea120aeb1deebe2fd8476c6aee8d4f3964"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0xd4f7387e123c96933bf9971570ffe2407ba7917f8263c7d778caa2119ebca44b"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 14826590,
        "transactionHash": "0xd16ff3aeab9d366804b314bec56aabab321163a88b45ab839558ef5d4db1d081",
        "address": "0xbFAb8c48cd98c81394eb6a5Ba507eEE133FDBD0b",
        "topics": [
          "0xd348e2220a50b4500ec353f6e802d2f14dd1b5d6786148fd1bbcc570bf92d473",
          "0xffffffff00000000000000000000000000000000000000000000000000000000",
          "0xffffffff00000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0xd4f7387e123c96933bf9971570ffe2407ba7917f8263c7d778caa2119ebca44b"
      }
    ],
    "blockNumber": 14826590,
    "cumulativeGasUsed": "2285447",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE20Bd49144E4289dc006E00FFA55AfB0686CAa97",
    "0xF1B3d65Ba36b1f943Ba732a5786F374bC9D38B5b",
    "0x946aC6D9f839E789593273DAc3E2b2C22E2eFf9E",
    "0x7010087B91E36f02EEbdb246b2100af45B02051b",
    "0xE42C1E0295Ef5d8e4d62E88bD72D651B4E9FE3Df",
    "0xBbBFfe14262876fE2a1382Da34ef4936A2137099"
  ],
  "solcInputHash": "54e6a59815d5a2c08b6526a1783379e5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICauldronGov\",\"name\":\"cauldron_\",\"type\":\"address\"},{\"internalType\":\"contract ILadleGov\",\"name\":\"ladle_\",\"type\":\"address\"},{\"internalType\":\"contract IWitchGov\",\"name\":\"witch_\",\"type\":\"address\"},{\"internalType\":\"contract IPoolFactory\",\"name\":\"poolFactory_\",\"type\":\"address\"},{\"internalType\":\"contract IJoinFactory\",\"name\":\"joinFactory_\",\"type\":\"address\"},{\"internalType\":\"contract IFYTokenFactory\",\"name\":\"fyTokenFactory_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"param\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"Point\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"newAdminRole\",\"type\":\"bytes4\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXIT\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JOIN\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCK\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCK8605463013\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT4146650865\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes6\",\"name\":\"assetId\",\"type\":\"bytes6\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"addAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes6\",\"name\":\"seriesId\",\"type\":\"bytes6\"},{\"internalType\":\"bytes6\",\"name\":\"baseId\",\"type\":\"bytes6\"},{\"internalType\":\"uint32\",\"name\":\"maturity\",\"type\":\"uint32\"},{\"internalType\":\"bytes6[]\",\"name\":\"ilkIds\",\"type\":\"bytes6[]\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"addSeries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cauldron\",\"outputs\":[{\"internalType\":\"contract ICauldronGov\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fyTokenFactory\",\"outputs\":[{\"internalType\":\"contract IFYTokenFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"roles\",\"type\":\"bytes4[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinFactory\",\"outputs\":[{\"internalType\":\"contract IJoinFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ladle\",\"outputs\":[{\"internalType\":\"contract ILadleGov\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"}],\"name\":\"lockRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes6\",\"name\":\"assetId\",\"type\":\"bytes6\"},{\"internalType\":\"contract IMultiOracleGov\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"makeBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes6\",\"name\":\"baseId\",\"type\":\"bytes6\"},{\"internalType\":\"bytes6\",\"name\":\"ilkId\",\"type\":\"bytes6\"},{\"internalType\":\"contract IMultiOracleGov\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"ratio\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"max\",\"type\":\"uint96\"},{\"internalType\":\"uint24\",\"name\":\"min\",\"type\":\"uint24\"},{\"internalType\":\"uint8\",\"name\":\"dec\",\"type\":\"uint8\"}],\"name\":\"makeIlk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"param\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"point\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFactory\",\"outputs\":[{\"internalType\":\"contract IPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"roles\",\"type\":\"bytes4[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"role\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"adminRole\",\"type\":\"bytes4\"}],\"name\":\"setRoleAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witch\",\"outputs\":[{\"internalType\":\"contract IWitchGov\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Ladle orchestrates contract calls throughout the Yield Protocol v2 into useful and efficient governance features.\",\"kind\":\"dev\",\"methods\":{\"addAsset(bytes6,address)\":{\"details\":\"Add an existing asset to the protocol, meaning:  - Add the asset to the cauldron  - Deploy a new Join, and integrate it with the Ladle  - If the asset is a base, integrate its rate source  - If the asset is a base, integrate a spot source and set a debt ceiling for any provided ilks\"},\"addSeries(bytes6,bytes6,uint32,bytes6[],string,string)\":{\"details\":\"Add an existing series to the protocol, by deploying a FYToken, and registering it in the cauldron with the approved ilks This must be followed by a call to addPool\"},\"getRoleAdmin(bytes4)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes4,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"grantRoles(bytes4[],address)\":{\"details\":\"Grants all of `role` in `roles` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - For each `role` in `roles`, the caller must have ``role``'s admin role.\"},\"hasRole(bytes4,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"lockRole(bytes4)\":{\"details\":\"Sets LOCK as ``role``'s admin role. LOCK has no members, so this disables admin management of ``role``. Emits a {RoleAdminChanged} event. Requirements: - the caller must have ``role``'s admin role.\"},\"makeBase(bytes6,address)\":{\"details\":\"Make a base asset out of a generic asset.\"},\"makeIlk(bytes6,bytes6,address,uint32,uint96,uint24,uint8)\":{\"details\":\"Make an ilk asset out of a generic asset.\"},\"point(bytes32,address)\":{\"details\":\"Point to a different cauldron, ladle, witch, poolFactory, joinFactory or fyTokenFactory\"},\"renounceRole(bytes4,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes4,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"revokeRoles(bytes4[],address)\":{\"details\":\"Revokes all of `role` in `roles` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - For each `role` in `roles`, the caller must have ``role``'s admin role.\"},\"setRoleAdmin(bytes4,bytes4)\":{\"details\":\"Sets `adminRole` as ``role``'s admin role. If ``role``'s admin role is not `adminRole` emits a {RoleAdminChanged} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"makeBase(bytes6,address)\":{\"notice\":\"`oracle` must be able to deliver a value for assetId and 'rate'\"},\"makeIlk(bytes6,bytes6,address,uint32,uint96,uint24,uint8)\":{\"notice\":\"`oracle` must be able to deliver a value for baseId and ilkId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/Wand.sol\":\"Wand\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@yield-protocol/utils-v2/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"hardhat/console.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms.\\n *\\n * Roles are referred to by their `bytes4` identifier. These are expected to be the \\n * signatures for all the functions in the contract. Special roles should be exposed\\n * in the external API and be unique:\\n *\\n * ```\\n * bytes4 public constant ROOT = 0x00000000;\\n * ```\\n *\\n * Roles represent restricted access to a function call. For that purpose, use {auth}:\\n *\\n * ```\\n * function foo() public auth {\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `ROOT`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {setRoleAdmin}.\\n *\\n * WARNING: The `ROOT` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\ncontract AccessControl {\\n    struct RoleData {\\n        mapping (address => bool) members;\\n        bytes4 adminRole;\\n    }\\n\\n    mapping (bytes4 => RoleData) private _roles;\\n\\n    bytes4 public constant ROOT = 0x00000000;\\n    bytes4 public constant ROOT4146650865 = 0x00000000; // Collision protection for ROOT, test with ROOT12007226833()\\n    bytes4 public constant LOCK = 0xFFFFFFFF;           // Used to disable further permissioning of a function\\n    bytes4 public constant LOCK8605463013 = 0xFFFFFFFF; // Collision protection for LOCK, test with LOCK10462387368()\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role\\n     *\\n     * `ROOT` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes4 indexed role, bytes4 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call.\\n     */\\n    event RoleGranted(bytes4 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes4 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Give msg.sender the ROOT role and create a LOCK role with itself as the admin role and no members. \\n     * Calling setRoleAdmin(msg.sig, LOCK) means no one can grant that msg.sig role anymore.\\n     */\\n    constructor () {\\n        _grantRole(ROOT, msg.sender);   // Grant ROOT to msg.sender\\n        _setRoleAdmin(LOCK, LOCK);      // Create the LOCK role by setting itself as its own admin, creating an independent role tree\\n    }\\n\\n    /**\\n     * @dev Each function in the contract has its own role, identified by their msg.sig signature.\\n     * ROOT can give and remove access to each function, lock any further access being granted to\\n     * a specific action, or even create other roles to delegate admin control over a function.\\n     */\\n    modifier auth() {\\n        require (_hasRole(msg.sig, msg.sender), \\\"Access denied\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Allow only if the caller has been granted the admin role of `role`.\\n     */\\n    modifier admin(bytes4 role) {\\n        require (_hasRole(_getRoleAdmin(role), msg.sender), \\\"Only admin\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes4 role, address account) external view returns (bool) {\\n        return _hasRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes4 role) external view returns (bytes4) {\\n        return _getRoleAdmin(role);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n\\n     * If ``role``'s admin role is not `adminRole` emits a {RoleAdminChanged} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function setRoleAdmin(bytes4 role, bytes4 adminRole) external virtual admin(role) {\\n        _setRoleAdmin(role, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes4 role, address account) external virtual admin(role) {\\n        _grantRole(role, account);\\n    }\\n\\n    \\n    /**\\n     * @dev Grants all of `role` in `roles` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - For each `role` in `roles`, the caller must have ``role``'s admin role.\\n     */\\n    function grantRoles(bytes4[] memory roles, address account) external virtual {\\n        for (uint256 i = 0; i < roles.length; i++) {\\n            require (_hasRole(_getRoleAdmin(roles[i]), msg.sender), \\\"Only admin\\\");\\n            _grantRole(roles[i], account);\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets LOCK as ``role``'s admin role. LOCK has no members, so this disables admin management of ``role``.\\n\\n     * Emits a {RoleAdminChanged} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function lockRole(bytes4 role) external virtual admin(role) {\\n        _setRoleAdmin(role, LOCK);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes4 role, address account) external virtual admin(role) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes all of `role` in `roles` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - For each `role` in `roles`, the caller must have ``role``'s admin role.\\n     */\\n    function revokeRoles(bytes4[] memory roles, address account) external virtual {\\n        for (uint256 i = 0; i < roles.length; i++) {\\n            require (_hasRole(_getRoleAdmin(roles[i]), msg.sender), \\\"Only admin\\\");\\n            _revokeRole(roles[i], account);\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes4 role, address account) external virtual {\\n        require(account == msg.sender, \\\"Renounce only for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    function _hasRole(bytes4 role, address account) internal view returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    function _getRoleAdmin(bytes4 role) internal view returns (bytes4) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    function _setRoleAdmin(bytes4 role, bytes4 adminRole) internal virtual {\\n        if (_getRoleAdmin(role) != adminRole) {\\n            _roles[role].adminRole = adminRole;\\n            emit RoleAdminChanged(role, adminRole);\\n        }\\n    }\\n\\n    function _grantRole(bytes4 role, address account) internal {\\n        if (!_hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, msg.sender);\\n        }\\n    }\\n\\n    function _revokeRole(bytes4 role, address account) internal {\\n        if (_hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, msg.sender);\\n        }\\n    }\\n}\",\"keccak256\":\"0x435855fa29ef8e1d5d74ba538947dc47e264f20abb35a2686658dfcadb3ce630\",\"license\":\"MIT\"},\"@yield-protocol/utils-v2/contracts/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0xa38ec4e151e4d397d05bdfb94e6e4eb91e57a9fca3bc1c655289a4adf31a58fa\",\"license\":\"MIT\"},\"@yield-protocol/vault-interfaces/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"./IFYToken.sol\\\";\\nimport \\\"./IOracle.sol\\\";\\n\\n\\nlibrary DataTypes {\\n    struct Series {\\n        IFYToken fyToken;                                               // Redeemable token for the series.\\n        bytes6  baseId;                                                 // Asset received on redemption.\\n        uint32  maturity;                                               // Unix time at which redemption becomes possible.\\n        // bytes2 free\\n    }\\n\\n    struct Debt {\\n        uint96 max;                                                     // Maximum debt accepted for a given underlying, across all series\\n        uint24 min;                                                     // Minimum debt accepted for a given underlying, across all series\\n        uint8 dec;                                                      // Multiplying factor (10**dec) for max and min \\n        uint128 sum;                                                    // Current debt for a given underlying, across all series\\n    }\\n\\n    struct SpotOracle {\\n        IOracle oracle;                                                 // Address for the spot price oracle\\n        uint32  ratio;                                                  // Collateralization ratio to multiply the price for\\n        // bytes8 free\\n    }\\n\\n    struct Vault {\\n        address owner;\\n        bytes6  seriesId;                                                // Each vault is related to only one series, which also determines the underlying.\\n        bytes6  ilkId;                                                   // Asset accepted as collateral\\n    }\\n\\n    struct Balances {\\n        uint128 art;                                                     // Debt amount\\n        uint128 ink;                                                     // Collateral amount\\n    }\\n}\",\"keccak256\":\"0x9b5347152e2ad1fdba19b7cbb4a8a6a1a111c419b03ff1ca00b8e7b29857be84\",\"license\":\"MIT\"},\"@yield-protocol/vault-interfaces/ICauldronGov.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"./IFYToken.sol\\\";\\nimport \\\"./IOracle.sol\\\";\\nimport \\\"./DataTypes.sol\\\";\\n\\n\\ninterface ICauldronGov {\\n    function assets(bytes6) external view returns (address);\\n    function series(bytes6) external view returns (DataTypes.Series memory);\\n    function lendingOracles(bytes6) external view returns (IOracle);\\n    function addAsset(bytes6, address) external;\\n    function addSeries(bytes6, bytes6, IFYToken) external;\\n    function addIlks(bytes6, bytes6[] memory) external;\\n    function setLendingOracle(bytes6, IOracle) external;\\n    function setSpotOracle(bytes6, bytes6, IOracle, uint32) external;\\n    function setDebtLimits(bytes6, bytes6, uint96, uint24, uint8) external;\\n}\",\"keccak256\":\"0x4c896f39683e4977e8af64623b47d0ca912bedb348c47dac5600d4c7fa4f9371\",\"license\":\"MIT\"},\"@yield-protocol/vault-interfaces/IFYToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@yield-protocol/utils-v2/contracts/token/IERC20.sol\\\";\\n\\n\\ninterface IFYToken is IERC20 {\\n    /// @dev Asset that is returned on redemption.\\n    function underlying() external view returns (address);\\n\\n    /// @dev Unix time at which redemption of fyToken for underlying are possible\\n    function maturity() external view returns (uint256);\\n    \\n    /// @dev Record price data at maturity\\n    function mature() external;\\n\\n    /// @dev Mint fyToken providing an equal amount of underlying to the protocol\\n    function mintWithUnderlying(address to, uint256 amount) external;\\n\\n    /// @dev Burn fyToken after maturity for an amount of underlying.\\n    function redeem(address to, uint256 amount) external returns (uint256);\\n\\n    /// @dev Mint fyToken.\\n    /// This function can only be called by other Yield contracts, not users directly.\\n    /// @param to Wallet to mint the fyToken in.\\n    /// @param fyTokenAmount Amount of fyToken to mint.\\n    function mint(address to, uint256 fyTokenAmount) external;\\n\\n    /// @dev Burn fyToken.\\n    /// This function can only be called by other Yield contracts, not users directly.\\n    /// @param from Wallet to burn the fyToken from.\\n    /// @param fyTokenAmount Amount of fyToken to burn.\\n    function burn(address from, uint256 fyTokenAmount) external;\\n}\",\"keccak256\":\"0xee56062d708103ffb7eb965a0a3f1cb77df24effb9ec16e9d58de3eabe7b55d3\",\"license\":\"MIT\"},\"@yield-protocol/vault-interfaces/IFYTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IOracle.sol\\\";\\nimport \\\"./IJoin.sol\\\";\\n\\ninterface IFYTokenFactory {\\n  event FYTokenCreated(address indexed fyToken, address indexed asset, uint32 indexed maturity);\\n\\n  function createFYToken(\\n    bytes6 baseId,\\n    IOracle oracle,\\n    IJoin baseJoin,\\n    uint32 maturity,\\n    string memory name,\\n    string memory symbol\\n  ) external returns (address);\\n}\\n\",\"keccak256\":\"0xdc7497f27de960758cf5fc7f23abab17c784b99723a927ffe095696566d6d911\",\"license\":\"MIT\"},\"@yield-protocol/vault-interfaces/IJoin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@yield-protocol/utils-v2/contracts/token/IERC20.sol\\\";\\n\\n\\ninterface IJoin {\\n    /// @dev asset managed by this contract\\n    function asset() external view returns (address);\\n\\n    /// @dev Add tokens to this contract.\\n    function join(address user, uint128 wad) external returns (uint128);\\n\\n    /// @dev Remove tokens to this contract.\\n    function exit(address user, uint128 wad) external returns (uint128);\\n}\",\"keccak256\":\"0x83c4f43ab4f3e721eaa9462264392e91f39404f10202c8b64b50ef030c36b750\",\"license\":\"MIT\"},\"@yield-protocol/vault-interfaces/IJoinFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n\\ninterface IJoinFactory {\\n  event JoinCreated(address indexed asset, address pool);\\n\\n  function createJoin(address asset) external returns (address);\\n}\\n\",\"keccak256\":\"0x2ae202ebe43e3506f264fcfe261374988643e49765de7d518517710000f24fbf\",\"license\":\"MIT\"},\"@yield-protocol/vault-interfaces/ILadleGov.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IJoin.sol\\\";\\n\\ninterface ILadleGov {\\n    function joins(bytes6) external view returns (IJoin);\\n    function addJoin(bytes6, address) external;\\n    function addPool(bytes6, address) external;\\n}\",\"keccak256\":\"0x292c02ad7862c655873718b88f9d151d9ebad4580204af4eaa5dcf0a8f9cf292\",\"license\":\"MIT\"},\"@yield-protocol/vault-interfaces/IMultiOracleGov.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IMultiOracleGov {\\n    function setSource(bytes6, bytes6, address) external;\\n}\\n\",\"keccak256\":\"0x870f65daffbec65552d424b78cce8bd4410f6ed07ce2cc5cf69f6d9c3b123ebb\",\"license\":\"MIT\"},\"@yield-protocol/vault-interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOracle {\\n    /**\\n     * @notice Doesn't refresh the price, but returns the latest value available without doing any transactional operations:\\n     * @return value in wei\\n     */\\n    function peek(bytes32 base, bytes32 quote, uint256 amount) external view returns (uint256 value, uint256 updateTime);\\n\\n    /**\\n     * @notice Does whatever work or queries will yield the most up-to-date price, and returns it.\\n     * @return value in wei\\n     */\\n    function get(bytes32 base, bytes32 quote, uint256 amount) external returns (uint256 value, uint256 updateTime);\\n}\\n\",\"keccak256\":\"0xfdcf22915a77069b267f5f464c0564b24b7216ecf3dccb692ddbb2c60feeb6c4\",\"license\":\"MIT\"},\"@yield-protocol/yieldspace-interfaces/IPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n\\ninterface IPoolFactory {\\n  event PoolCreated(address indexed base, address indexed fyToken, address pool);\\n\\n  function POOL_BYTECODE_HASH() external pure returns (bytes32);\\n  function calculatePoolAddress(address base, address fyToken) external view returns (address);\\n  function getPool(address base, address fyToken) external view returns (address);\\n  function createPool(address base, address fyToken) external returns (address);\\n  function nextBase() external view returns (address);\\n  function nextFYToken() external view returns (address);\\n  function ts() external view returns (int128);\\n  function g1() external view returns (int128);\\n  function g2() external view returns (int128);\\n}\\n\",\"keccak256\":\"0x2738836239363283c2daac57ebf55d2b5adb7a1fe361c02fd5747c02bf8d46ca\",\"license\":\"MIT\"},\"contracts/vault/Wand.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.6;\\nimport \\\"@yield-protocol/vault-interfaces/ICauldronGov.sol\\\";\\nimport \\\"@yield-protocol/vault-interfaces/ILadleGov.sol\\\";\\nimport \\\"@yield-protocol/vault-interfaces/IMultiOracleGov.sol\\\";\\nimport \\\"@yield-protocol/vault-interfaces/IJoinFactory.sol\\\";\\nimport \\\"@yield-protocol/vault-interfaces/IJoin.sol\\\";\\nimport \\\"@yield-protocol/vault-interfaces/IFYTokenFactory.sol\\\";\\nimport \\\"@yield-protocol/vault-interfaces/IFYToken.sol\\\";\\nimport \\\"@yield-protocol/vault-interfaces/DataTypes.sol\\\";\\nimport \\\"@yield-protocol/yieldspace-interfaces/IPoolFactory.sol\\\";\\nimport \\\"@yield-protocol/utils-v2/contracts/access/AccessControl.sol\\\";\\nimport \\\"./constants/Constants.sol\\\";\\n\\ninterface IWitchGov {\\n    function limits(bytes6)\\n        external\\n        view\\n        returns (\\n            uint96,\\n            uint24,\\n            uint8,\\n            uint128\\n        );\\n}\\n\\n/// @dev Ladle orchestrates contract calls throughout the Yield Protocol v2 into useful and efficient governance features.\\ncontract Wand is AccessControl, Constants {\\n    event Point(bytes32 indexed param, address value);\\n\\n    bytes4 public constant JOIN = IJoin.join.selector; // bytes4(keccak256(\\\"join(address,uint128)\\\"));\\n    bytes4 public constant EXIT = IJoin.exit.selector; // bytes4(keccak256(\\\"exit(address,uint128)\\\"));\\n    bytes4 public constant MINT = IFYToken.mint.selector; // bytes4(keccak256(\\\"mint(address,uint256)\\\"));\\n    bytes4 public constant BURN = IFYToken.burn.selector; // bytes4(keccak256(\\\"burn(address,uint256)\\\"));\\n\\n    ICauldronGov public cauldron;\\n    ILadleGov public ladle;\\n    IWitchGov public witch;\\n    IPoolFactory public poolFactory;\\n    IJoinFactory public joinFactory;\\n    IFYTokenFactory public fyTokenFactory;\\n\\n    constructor(\\n        ICauldronGov cauldron_,\\n        ILadleGov ladle_,\\n        IWitchGov witch_,\\n        IPoolFactory poolFactory_,\\n        IJoinFactory joinFactory_,\\n        IFYTokenFactory fyTokenFactory_\\n    ) {\\n        cauldron = cauldron_;\\n        ladle = ladle_;\\n        witch = witch_;\\n        poolFactory = poolFactory_;\\n        joinFactory = joinFactory_;\\n        fyTokenFactory = fyTokenFactory_;\\n    }\\n\\n    /// @dev Point to a different cauldron, ladle, witch, poolFactory, joinFactory or fyTokenFactory\\n    function point(bytes32 param, address value) external auth {\\n        if (param == \\\"cauldron\\\") cauldron = ICauldronGov(value);\\n        else if (param == \\\"ladle\\\") ladle = ILadleGov(value);\\n        else if (param == \\\"witch\\\") witch = IWitchGov(value);\\n        else if (param == \\\"poolFactory\\\") poolFactory = IPoolFactory(value);\\n        else if (param == \\\"joinFactory\\\") joinFactory = IJoinFactory(value);\\n        else if (param == \\\"fyTokenFactory\\\")\\n            fyTokenFactory = IFYTokenFactory(value);\\n        else revert(\\\"Unrecognized parameter\\\");\\n        emit Point(param, value);\\n    }\\n\\n    /// @dev Add an existing asset to the protocol, meaning:\\n    ///  - Add the asset to the cauldron\\n    ///  - Deploy a new Join, and integrate it with the Ladle\\n    ///  - If the asset is a base, integrate its rate source\\n    ///  - If the asset is a base, integrate a spot source and set a debt ceiling for any provided ilks\\n    function addAsset(bytes6 assetId, address asset) external auth {\\n        // Add asset to cauldron, deploy new Join, and add it to the ladle\\n        require(address(asset) != address(0), \\\"Asset required\\\");\\n        cauldron.addAsset(assetId, asset);\\n        AccessControl join = AccessControl(joinFactory.createJoin(asset)); // We need the access control methods of Join\\n        bytes4[] memory sigs = new bytes4[](2);\\n        sigs[0] = JOIN;\\n        sigs[1] = EXIT;\\n        join.grantRoles(sigs, address(ladle));\\n        join.grantRole(ROOT, msg.sender);\\n        // join.renounceRole(ROOT, address(this));  // Wand requires ongoing rights to set up permissions to joins\\n        ladle.addJoin(assetId, address(join));\\n    }\\n\\n    /// @dev Make a base asset out of a generic asset.\\n    /// @notice `oracle` must be able to deliver a value for assetId and 'rate'\\n    function makeBase(bytes6 assetId, IMultiOracleGov oracle) external auth {\\n        require(address(oracle) != address(0), \\\"Oracle required\\\");\\n\\n        cauldron.setLendingOracle(assetId, IOracle(address(oracle)));\\n\\n        AccessControl baseJoin = AccessControl(address(ladle.joins(assetId)));\\n        baseJoin.grantRole(JOIN, address(witch)); // Give the Witch permission to join base\\n    }\\n\\n    /// @dev Make an ilk asset out of a generic asset.\\n    /// @notice `oracle` must be able to deliver a value for baseId and ilkId\\n    function makeIlk(\\n        bytes6 baseId,\\n        bytes6 ilkId,\\n        IMultiOracleGov oracle,\\n        uint32 ratio,\\n        uint96 max,\\n        uint24 min,\\n        uint8 dec\\n    ) external auth {\\n        require(address(oracle) != address(0), \\\"Oracle required\\\");\\n        (uint96 line, , , ) = witch.limits(ilkId);\\n        require(line > 0, \\\"Initialize ilk in Witch\\\");\\n        cauldron.setSpotOracle(baseId, ilkId, IOracle(address(oracle)), ratio);\\n        cauldron.setDebtLimits(baseId, ilkId, max, min, dec);\\n\\n        AccessControl ilkJoin = AccessControl(address(ladle.joins(ilkId)));\\n        ilkJoin.grantRole(EXIT, address(witch)); // Give the Witch permission to exit ilk\\n    }\\n\\n    /// @dev Add an existing series to the protocol, by deploying a FYToken, and registering it in the cauldron with the approved ilks\\n    /// This must be followed by a call to addPool\\n    function addSeries(\\n        bytes6 seriesId,\\n        bytes6 baseId,\\n        uint32 maturity,\\n        bytes6[] calldata ilkIds,\\n        string memory name,\\n        string memory symbol\\n    ) external auth {\\n        address base = cauldron.assets(baseId);\\n        require(base != address(0), \\\"Base not found\\\");\\n\\n        IJoin baseJoin = ladle.joins(baseId);\\n        require(address(baseJoin) != address(0), \\\"Join not found\\\");\\n\\n        IOracle oracle = cauldron.lendingOracles(baseId); // The lending oracles in the Cauldron are also configured to return chi\\n        require(address(oracle) != address(0), \\\"Chi oracle not found\\\");\\n\\n        AccessControl fyToken = AccessControl(\\n            fyTokenFactory.createFYToken(\\n                baseId,\\n                oracle,\\n                baseJoin,\\n                maturity,\\n                name, // Derive from base and maturity, perhaps\\n                symbol // Derive from base and maturity, perhaps\\n            )\\n        );\\n\\n        // Allow the fyToken to pull from the base join for redemption, and to push to mint with underlying\\n        bytes4[] memory sigs = new bytes4[](2);\\n        sigs[0] = JOIN;\\n        sigs[1] = EXIT;\\n        AccessControl(address(baseJoin)).grantRoles(sigs, address(fyToken));\\n\\n        // Allow the ladle to issue and cancel fyToken\\n        sigs = new bytes4[](2);\\n        sigs[0] = MINT;\\n        sigs[1] = BURN;\\n        fyToken.grantRoles(sigs, address(ladle));\\n\\n        // Pass ownership of the fyToken to msg.sender\\n        fyToken.grantRole(ROOT, msg.sender);\\n        fyToken.renounceRole(ROOT, address(this));\\n\\n        // Add fyToken/series to the Cauldron and approve ilks for the series\\n        cauldron.addSeries(seriesId, baseId, IFYToken(address(fyToken)));\\n        cauldron.addIlks(seriesId, ilkIds);\\n\\n        // Create the pool for the base and fyToken\\n        poolFactory.createPool(base, address(fyToken));\\n        address pool = poolFactory.calculatePoolAddress(base, address(fyToken));\\n\\n        // Register pool in Ladle\\n        ladle.addPool(seriesId, address(pool));\\n    }\\n}\\n\",\"keccak256\":\"0x3ebcabcdc76944a1faffc9833641cc469817111b9e5f4359eed323bad4874e9f\",\"license\":\"BUSL-1.1\"},\"contracts/vault/constants/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.6;\\n\\ncontract Constants {\\n    bytes32 CHI = \\\"CHI\\\";\\n    bytes32 RATE = \\\"RATE\\\";\\n    bytes6 ETH = \\\"00\\\";\\n}\",\"keccak256\":\"0x0d047bf123a8372fa1876245c9f78f1525c8402d0189463f73de0372153909d1\",\"license\":\"BUSL-1.1\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526243484960e81b600155635241544560e01b6002556003805465ffffffffffff1916653030000000001790553480156200003d57600080fd5b50604051620024da380380620024da83398101604081905262000060916200023c565b6200006d60003362000106565b620000816001600160e01b0319806200019e565b600380546001600160a01b03978816660100000000000002600160301b600160d01b0319909116179055600480549587166001600160a01b0319968716179055600580549487169486169490941790935560068054928616928516929092179091556007805491851691841691909117905560088054919093169116179055620002e9565b6001600160e01b031982166000908152602081815260408083206001600160a01b038516845290915290205460ff166200019a576001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff1916600117905551339391927fe6231789d19137da31d0550f4ba9ee379020a8cfb64cb79bf1790c996d2e616591a45b5050565b6001600160e01b03198116620001d0836001600160e01b03191660009081526020819052604090206001015460e01b90565b6001600160e01b031916146200019a576001600160e01b0319828116600081815260208190526040808220600101805463ffffffff191660e087901c17905551928416927fd348e2220a50b4500ec353f6e802d2f14dd1b5d6786148fd1bbcc570bf92d4739190a35050565b60008060008060008060c087890312156200025657600080fd5b86516200026381620002d0565b60208801519096506200027681620002d0565b60408801519095506200028981620002d0565b60608801519094506200029c81620002d0565b6080880151909350620002af81620002d0565b60a0880151909250620002c281620002d0565b809150509295509295509295565b6001600160a01b0381168114620002e657600080fd5b50565b6121e180620002f96000396000f3fe608060405234801561001057600080fd5b506004361061014f5760003560e01c801561015457806310ab94321461017a5780631295bd081461019d5780633e36f4c7146101b25780634219dc40146101c057806344faded0146101e0578063559742d9146101f35780635909c12f146101545780635ba5e9f014610206578063687f0e4c1461021957806376563cec1461022c5780637f9681481461023a578063836a3ce014610248578063892723b71461025b57806394b8e38f1461026e57806397ff6a0414610281578063a308e8511461029b578063a4f0d7d0146102ae578063ad82110f146102bd578063ae93c1b5146102d0578063c0a2526c146102e3578063ddf0c8b3146102f1578063de02cde714610304578063df03b1e414610317578063e665f9e41461032a578063effae3531461033d578063fc736ce214610350578063ffffffff146102ae575b600080fd5b61015c600081565b6040516001600160e01b031990911681526020015b60405180910390f35b61018d610188366004611c09565b610363565b6040519015158152602001610171565b6101b06101ab366004611bbe565b610376565b005b61015c6340c10f1960e01b81565b6006546101d3906001600160a01b031681565b6040516101719190611ebc565b6101b06101ee366004611c09565b61056f565b6101b0610201366004611bee565b6105ad565b61015c610214366004611bee565b6105ec565b6101b0610227366004611c09565b6105fd565b61015c6312e5ff7760e01b81565b61015c63ceae3abd60e01b81565b6007546101d3906001600160a01b031681565b6101b0610269366004611d14565b610658565b6004546101d3906001600160a01b031681565b6003546101d390600160301b90046001600160a01b031681565b6005546101d3906001600160a01b031681565b61015c6001600160e01b031981565b6101b06102cb366004611af9565b610ed5565b6101b06102de366004611c35565b610f57565b61015c632770a7eb60e21b81565b6008546101d3906001600160a01b031681565b6101b0610312366004611c09565b610f8a565b6101b0610325366004611c84565b610fbd565b6101b0610338366004611c68565b61130d565b6101b061034b366004611af9565b611636565b6101b061035e366004611c68565b6116ab565b600061036f8383611863565b9392505050565b61038c6000356001600160e01b03191633611863565b6103b15760405162461bcd60e51b81526004016103a890612089565b60405180910390fd5b816731b0bab6323937b760c11b14156103ed5760038054600160301b600160d01b031916600160301b6001600160a01b03841602179055610533565b81646c61646c6560d81b141561041d57600480546001600160a01b0319166001600160a01b038316179055610533565b81640eed2e8c6d60db1b141561044d57600580546001600160a01b0319166001600160a01b038316179055610533565b816a706f6f6c466163746f727960a81b141561048357600680546001600160a01b0319166001600160a01b038316179055610533565b816a6a6f696e466163746f727960a81b14156104b957600780546001600160a01b0319166001600160a01b038316179055610533565b816d6679546f6b656e466163746f727960901b14156104f257600880546001600160a01b0319166001600160a01b038316179055610533565b60405162461bcd60e51b81526020600482015260166024820152752ab73932b1b7b3b734bd32b2103830b930b6b2ba32b960511b60448201526064016103a8565b817fd61f2f59686784f82db8673820acfa642f9709c800724e09f7ac0e1aaedf4af7826040516105639190611ebc565b60405180910390a25050565b8161058261057c82611898565b33611863565b61059e5760405162461bcd60e51b81526004016103a890612065565b6105a883836118ba565b505050565b806105ba61057c82611898565b6105d65760405162461bcd60e51b81526004016103a890612065565b6105e8826001600160e01b0319611929565b5050565b60006105f782611898565b92915050565b6001600160a01b038116331461064e5760405162461bcd60e51b81526020600482015260166024820152752932b737bab731b29037b7363c903337b91039b2b63360511b60448201526064016103a8565b6105e882826118ba565b61066e6000356001600160e01b03191633611863565b61068a5760405162461bcd60e51b81526004016103a890612089565b600354604051630cdf468960e11b8152600091600160301b90046001600160a01b0316906319be8d12906106c2908a90600401611f6b565b60206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190611adc565b90506001600160a01b03811661075b5760405162461bcd60e51b815260206004820152600e60248201526d10985cd9481b9bdd08199bdd5b9960921b60448201526064016103a8565b600480546040516330705b1b60e11b81526000926001600160a01b03909216916360e0b6369161078d918c9101611f6b565b60206040518083038186803b1580156107a557600080fd5b505afa1580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd9190611adc565b90506001600160a01b0381166108265760405162461bcd60e51b815260206004820152600e60248201526d129bda5b881b9bdd08199bdd5b9960921b60448201526064016103a8565b60035460405163b2bb4cc760e01b8152600091600160301b90046001600160a01b03169063b2bb4cc79061085e908c90600401611f6b565b60206040518083038186803b15801561087657600080fd5b505afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190611adc565b90506001600160a01b0381166108fd5760405162461bcd60e51b815260206004820152601460248201527310da1a481bdc9858db19481b9bdd08199bdd5b9960621b60448201526064016103a8565b60085460405163839b132d60e01b81526000916001600160a01b03169063839b132d90610938908d90869088908f908d908d90600401611ffe565b602060405180830381600087803b15801561095257600080fd5b505af1158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190611adc565b604080516002808252606082018352929350600092909160208301908036833701905050905063ceae3abd60e01b816000815181106109cb576109cb612132565b6001600160e01b03199092166020928302919091019091015280516312e5ff7760e01b9082906001908110610a0257610a02612132565b6001600160e01b03199092166020928302919091019091015260405163effae35360e01b81526001600160a01b0385169063effae35390610a499084908690600401611eea565b600060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b5060029250610a84915050565b604051908082528060200260200182016040528015610aad578160200160208202803683370190505b5090506340c10f1960e01b81600081518110610acb57610acb612132565b6001600160e01b0319909216602092830291909101909101528051632770a7eb60e21b9082906001908110610b0257610b02612132565b6001600160e01b0319909216602092830291909101909101526004805460405163effae35360e01b81526001600160a01b038086169363effae35393610b4f938793919091169101611eea565b600060405180830381600087803b158015610b6957600080fd5b505af1158015610b7d573d6000803e3d6000fd5b505060405163de02cde760e01b81526001600160a01b038516925063de02cde79150610bb0906000903390600401611f48565b600060405180830381600087803b158015610bca57600080fd5b505af1158015610bde573d6000803e3d6000fd5b5050604051631a1fc39360e21b81526001600160a01b038516925063687f0e4c9150610c11906000903090600401611f48565b600060405180830381600087803b158015610c2b57600080fd5b505af1158015610c3f573d6000803e3d6000fd5b5050600354604051634b6e6f9360e11b81526001600160a01b03600160301b9092049190911692506396dcdf269150610ca9908f908f9087906004016001600160d01b031993841681529190921660208201526001600160a01b0391909116604082015260600190565b600060405180830381600087803b158015610cc357600080fd5b505af1158015610cd7573d6000803e3d6000fd5b50506003546040516353eecb7760e01b8152600160301b9091046001600160a01b031692506353eecb779150610d15908f908d908d90600401611fa3565b600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b505060065460405163e343361560e01b81526001600160a01b03909116925063e34336159150610d799088908690600401611ed0565b602060405180830381600087803b158015610d9357600080fd5b505af1158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb9190611adc565b506006546040516304136ce760e31b81526000916001600160a01b03169063209b673890610dff9089908790600401611ed0565b60206040518083038186803b158015610e1757600080fd5b505afa158015610e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4f9190611adc565b9050600460009054906101000a90046001600160a01b03166001600160a01b03166333e6035a8e836040518363ffffffff1660e01b8152600401610e94929190611f80565b600060405180830381600087803b158015610eae57600080fd5b505af1158015610ec2573d6000803e3d6000fd5b5050505050505050505050505050505050565b60005b82518110156105a857610f0661057c848381518110610ef957610ef9612132565b6020026020010151611898565b610f225760405162461bcd60e51b81526004016103a890612065565b610f45838281518110610f3757610f37612132565b6020026020010151836118ba565b80610f4f81612109565b915050610ed8565b81610f6461057c82611898565b610f805760405162461bcd60e51b81526004016103a890612065565b6105a88383611929565b81610f9761057c82611898565b610fb35760405162461bcd60e51b81526004016103a890612065565b6105a883836119a8565b610fd36000356001600160e01b03191633611863565b610fef5760405162461bcd60e51b81526004016103a890612089565b6001600160a01b0385166110155760405162461bcd60e51b81526004016103a8906120b0565b60055460405163cf17b4e960e01b81526000916001600160a01b03169063cf17b4e990611046908a90600401611f6b565b60806040518083038186803b15801561105e57600080fd5b505afa158015611072573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110969190611e04565b50505090506000816001600160601b0316116110ee5760405162461bcd60e51b8152602060048201526017602482015276092dcd2e8d2c2d8d2f4ca40d2d8d640d2dc40aed2e8c6d604b1b60448201526064016103a8565b60035460405163477b5efd60e11b81526001600160d01b0319808b166004830152891660248201526001600160a01b03888116604483015263ffffffff88166064830152600160301b90920490911690638ef6bdfa90608401600060405180830381600087803b15801561116157600080fd5b505af1158015611175573d6000803e3d6000fd5b505060035460405163d3fc152b60e01b81526001600160d01b0319808d1660048301528b1660248201526001600160601b038816604482015262ffffff8716606482015260ff86166084820152600160301b9091046001600160a01b0316925063d3fc152b915060a401600060405180830381600087803b1580156111f957600080fd5b505af115801561120d573d6000803e3d6000fd5b5050600480546040516330705b1b60e11b8152600094506001600160a01b0390911692506360e0b63691611243918c9101611f6b565b60206040518083038186803b15801561125b57600080fd5b505afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112939190611adc565b60055460405163de02cde760e01b81529192506001600160a01b038084169263de02cde7926112d0926312e5ff7760e01b92911690600401611f48565b600060405180830381600087803b1580156112ea57600080fd5b505af11580156112fe573d6000803e3d6000fd5b50505050505050505050505050565b6113236000356001600160e01b03191633611863565b61133f5760405162461bcd60e51b81526004016103a890612089565b6001600160a01b0381166113865760405162461bcd60e51b815260206004820152600e60248201526d105cdcd95d081c995c5d5a5c995960921b60448201526064016103a8565b6003546040516339997e7960e21b8152600160301b9091046001600160a01b03169063e665f9e4906113be9085908590600401611f80565b600060405180830381600087803b1580156113d857600080fd5b505af11580156113ec573d6000803e3d6000fd5b505060075460405163d448c1c560e01b8152600093506001600160a01b03909116915063d448c1c590611423908590600401611ebc565b602060405180830381600087803b15801561143d57600080fd5b505af1158015611451573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114759190611adc565b604080516002808252606082018352929350600092909160208301908036833701905050905063ceae3abd60e01b816000815181106114b6576114b6612132565b6001600160e01b03199092166020928302919091019091015280516312e5ff7760e01b90829060019081106114ed576114ed612132565b6001600160e01b0319909216602092830291909101909101526004805460405163effae35360e01b81526001600160a01b038086169363effae3539361153a938793919091169101611eea565b600060405180830381600087803b15801561155457600080fd5b505af1158015611568573d6000803e3d6000fd5b505060405163de02cde760e01b81526001600160a01b038516925063de02cde7915061159b906000903390600401611f48565b600060405180830381600087803b1580156115b557600080fd5b505af11580156115c9573d6000803e3d6000fd5b5050600480546040516349c29d2b60e01b81526001600160a01b0390911693506349c29d2b92506115fe918891879101611f80565b600060405180830381600087803b15801561161857600080fd5b505af115801561162c573d6000803e3d6000fd5b5050505050505050565b60005b82518110156105a85761165a61057c848381518110610ef957610ef9612132565b6116765760405162461bcd60e51b81526004016103a890612065565b61169983828151811061168b5761168b612132565b6020026020010151836119a8565b806116a381612109565b915050611639565b6116c16000356001600160e01b03191633611863565b6116dd5760405162461bcd60e51b81526004016103a890612089565b6001600160a01b0381166117035760405162461bcd60e51b81526004016103a8906120b0565b600354604051630aae4fa960e31b8152600160301b9091046001600160a01b0316906355727d489061173b9085908590600401611f80565b600060405180830381600087803b15801561175557600080fd5b505af1158015611769573d6000803e3d6000fd5b5050600480546040516330705b1b60e11b8152600094506001600160a01b0390911692506360e0b6369161179f91879101611f6b565b60206040518083038186803b1580156117b757600080fd5b505afa1580156117cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ef9190611adc565b60055460405163de02cde760e01b81529192506001600160a01b038084169263de02cde79261182c9263ceae3abd60e01b92911690600401611f48565b600060405180830381600087803b15801561184657600080fd5b505af115801561185a573d6000803e3d6000fd5b50505050505050565b6001600160e01b031982166000908152602081815260408083206001600160a01b038516845290915290205460ff1692915050565b6001600160e01b03191660009081526020819052604090206001015460e01b90565b6118c48282611863565b156105e8576001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339391927f4ddc7b757e7bdd7254a9cd39452d307a52761bc824625c6a33104a075d8099e691a45050565b6001600160e01b0319811661193d83611898565b6001600160e01b031916146105e8576001600160e01b0319828116600081815260208190526040808220600101805463ffffffff191660e087901c17905551928416927fd348e2220a50b4500ec353f6e802d2f14dd1b5d6786148fd1bbcc570bf92d4739190a35050565b6119b28282611863565b6105e8576001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff1916600117905551339391927fe6231789d19137da31d0550f4ba9ee379020a8cfb64cb79bf1790c996d2e616591a45050565b8035611a248161215e565b919050565b80356001600160e01b031981168114611a2457600080fd5b80356001600160d01b031981168114611a2457600080fd5b600082601f830112611a6a57600080fd5b81356001600160401b03811115611a8357611a83612148565b611a96601f8201601f19166020016120d9565b818152846020838601011115611aab57600080fd5b816020850160208301376000918101602001919091529392505050565b803563ffffffff81168114611a2457600080fd5b600060208284031215611aee57600080fd5b815161036f8161215e565b60008060408385031215611b0c57600080fd5b82356001600160401b0380821115611b2357600080fd5b818501915085601f830112611b3757600080fd5b8135602082821115611b4b57611b4b612148565b8160051b9250611b5c8184016120d9565b8281528181019085830185870184018b1015611b7757600080fd5b600096505b84871015611ba157611b8d81611a29565b835260019690960195918301918301611b7c565b509650611bb19050878201611a19565b9450505050509250929050565b60008060408385031215611bd157600080fd5b823591506020830135611be38161215e565b809150509250929050565b600060208284031215611c0057600080fd5b61036f82611a29565b60008060408385031215611c1c57600080fd5b611c2583611a29565b91506020830135611be38161215e565b60008060408385031215611c4857600080fd5b611c5183611a29565b9150611c5f60208401611a29565b90509250929050565b60008060408385031215611c7b57600080fd5b611c2583611a41565b600080600080600080600060e0888a031215611c9f57600080fd5b611ca888611a41565b9650611cb660208901611a41565b95506040880135611cc68161215e565b9450611cd460608901611ac8565b93506080880135611ce481612196565b925060a0880135611cf481612176565b915060c0880135611d0481612187565b8091505092959891949750929550565b600080600080600080600060c0888a031215611d2f57600080fd5b611d3888611a41565b9650611d4660208901611a41565b9550611d5460408901611ac8565b945060608801356001600160401b0380821115611d7057600080fd5b818a0191508a601f830112611d8457600080fd5b813581811115611d9357600080fd5b8b60208260051b8501011115611da857600080fd5b6020830196508095505060808a0135915080821115611dc657600080fd5b611dd28b838c01611a59565b935060a08a0135915080821115611de857600080fd5b50611df58a828b01611a59565b91505092959891949750929550565b60008060008060808587031215611e1a57600080fd5b8451611e2581612196565b6020860151909450611e3681612176565b6040860151909350611e4781612187565b60608601519092506001600160801b0381168114611e6457600080fd5b939692955090935050565b6000815180845260005b81811015611e9557602081850181015186830182015201611e79565b81811115611ea7576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b604080825283519082018190526000906020906060840190828701845b82811015611f2d5781516001600160e01b03191684529284019290840190600101611f07565b5050506001600160a01b039490941692019190915250919050565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b6001600160d01b031991909116815260200190565b6001600160d01b03199290921682526001600160a01b0316602082015260400190565b6001600160d01b0319848116825260406020808401829052908301849052600091859160608501845b87811015611ff15783611fde86611a41565b1682529382019390820190600101611fcc565b5098975050505050505050565b6001600160d01b0319871681526001600160a01b0386811660208301528516604082015263ffffffff8416606082015260c06080820181905260009061204690830185611e6f565b82810360a08401526120588185611e6f565b9998505050505050505050565b6020808252600a908201526927b7363c9030b236b4b760b11b604082015260600190565b6020808252600d908201526c1058d8d95cdcc819195b9a5959609a1b604082015260600190565b6020808252600f908201526e13dc9858db19481c995c5d5a5c9959608a1b604082015260600190565b604051601f8201601f191681016001600160401b038111828210171561210157612101612148565b604052919050565b600060001982141561212b57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461217357600080fd5b50565b62ffffff8116811461217357600080fd5b60ff8116811461217357600080fd5b6001600160601b038116811461217357600080fdfea2646970667358221220afe65edcbee16293f6da043e6e0aa2c96f6b441af0bdc4cff4fe91e8d81223b864736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014f5760003560e01c801561015457806310ab94321461017a5780631295bd081461019d5780633e36f4c7146101b25780634219dc40146101c057806344faded0146101e0578063559742d9146101f35780635909c12f146101545780635ba5e9f014610206578063687f0e4c1461021957806376563cec1461022c5780637f9681481461023a578063836a3ce014610248578063892723b71461025b57806394b8e38f1461026e57806397ff6a0414610281578063a308e8511461029b578063a4f0d7d0146102ae578063ad82110f146102bd578063ae93c1b5146102d0578063c0a2526c146102e3578063ddf0c8b3146102f1578063de02cde714610304578063df03b1e414610317578063e665f9e41461032a578063effae3531461033d578063fc736ce214610350578063ffffffff146102ae575b600080fd5b61015c600081565b6040516001600160e01b031990911681526020015b60405180910390f35b61018d610188366004611c09565b610363565b6040519015158152602001610171565b6101b06101ab366004611bbe565b610376565b005b61015c6340c10f1960e01b81565b6006546101d3906001600160a01b031681565b6040516101719190611ebc565b6101b06101ee366004611c09565b61056f565b6101b0610201366004611bee565b6105ad565b61015c610214366004611bee565b6105ec565b6101b0610227366004611c09565b6105fd565b61015c6312e5ff7760e01b81565b61015c63ceae3abd60e01b81565b6007546101d3906001600160a01b031681565b6101b0610269366004611d14565b610658565b6004546101d3906001600160a01b031681565b6003546101d390600160301b90046001600160a01b031681565b6005546101d3906001600160a01b031681565b61015c6001600160e01b031981565b6101b06102cb366004611af9565b610ed5565b6101b06102de366004611c35565b610f57565b61015c632770a7eb60e21b81565b6008546101d3906001600160a01b031681565b6101b0610312366004611c09565b610f8a565b6101b0610325366004611c84565b610fbd565b6101b0610338366004611c68565b61130d565b6101b061034b366004611af9565b611636565b6101b061035e366004611c68565b6116ab565b600061036f8383611863565b9392505050565b61038c6000356001600160e01b03191633611863565b6103b15760405162461bcd60e51b81526004016103a890612089565b60405180910390fd5b816731b0bab6323937b760c11b14156103ed5760038054600160301b600160d01b031916600160301b6001600160a01b03841602179055610533565b81646c61646c6560d81b141561041d57600480546001600160a01b0319166001600160a01b038316179055610533565b81640eed2e8c6d60db1b141561044d57600580546001600160a01b0319166001600160a01b038316179055610533565b816a706f6f6c466163746f727960a81b141561048357600680546001600160a01b0319166001600160a01b038316179055610533565b816a6a6f696e466163746f727960a81b14156104b957600780546001600160a01b0319166001600160a01b038316179055610533565b816d6679546f6b656e466163746f727960901b14156104f257600880546001600160a01b0319166001600160a01b038316179055610533565b60405162461bcd60e51b81526020600482015260166024820152752ab73932b1b7b3b734bd32b2103830b930b6b2ba32b960511b60448201526064016103a8565b817fd61f2f59686784f82db8673820acfa642f9709c800724e09f7ac0e1aaedf4af7826040516105639190611ebc565b60405180910390a25050565b8161058261057c82611898565b33611863565b61059e5760405162461bcd60e51b81526004016103a890612065565b6105a883836118ba565b505050565b806105ba61057c82611898565b6105d65760405162461bcd60e51b81526004016103a890612065565b6105e8826001600160e01b0319611929565b5050565b60006105f782611898565b92915050565b6001600160a01b038116331461064e5760405162461bcd60e51b81526020600482015260166024820152752932b737bab731b29037b7363c903337b91039b2b63360511b60448201526064016103a8565b6105e882826118ba565b61066e6000356001600160e01b03191633611863565b61068a5760405162461bcd60e51b81526004016103a890612089565b600354604051630cdf468960e11b8152600091600160301b90046001600160a01b0316906319be8d12906106c2908a90600401611f6b565b60206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190611adc565b90506001600160a01b03811661075b5760405162461bcd60e51b815260206004820152600e60248201526d10985cd9481b9bdd08199bdd5b9960921b60448201526064016103a8565b600480546040516330705b1b60e11b81526000926001600160a01b03909216916360e0b6369161078d918c9101611f6b565b60206040518083038186803b1580156107a557600080fd5b505afa1580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd9190611adc565b90506001600160a01b0381166108265760405162461bcd60e51b815260206004820152600e60248201526d129bda5b881b9bdd08199bdd5b9960921b60448201526064016103a8565b60035460405163b2bb4cc760e01b8152600091600160301b90046001600160a01b03169063b2bb4cc79061085e908c90600401611f6b565b60206040518083038186803b15801561087657600080fd5b505afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190611adc565b90506001600160a01b0381166108fd5760405162461bcd60e51b815260206004820152601460248201527310da1a481bdc9858db19481b9bdd08199bdd5b9960621b60448201526064016103a8565b60085460405163839b132d60e01b81526000916001600160a01b03169063839b132d90610938908d90869088908f908d908d90600401611ffe565b602060405180830381600087803b15801561095257600080fd5b505af1158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190611adc565b604080516002808252606082018352929350600092909160208301908036833701905050905063ceae3abd60e01b816000815181106109cb576109cb612132565b6001600160e01b03199092166020928302919091019091015280516312e5ff7760e01b9082906001908110610a0257610a02612132565b6001600160e01b03199092166020928302919091019091015260405163effae35360e01b81526001600160a01b0385169063effae35390610a499084908690600401611eea565b600060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b5060029250610a84915050565b604051908082528060200260200182016040528015610aad578160200160208202803683370190505b5090506340c10f1960e01b81600081518110610acb57610acb612132565b6001600160e01b0319909216602092830291909101909101528051632770a7eb60e21b9082906001908110610b0257610b02612132565b6001600160e01b0319909216602092830291909101909101526004805460405163effae35360e01b81526001600160a01b038086169363effae35393610b4f938793919091169101611eea565b600060405180830381600087803b158015610b6957600080fd5b505af1158015610b7d573d6000803e3d6000fd5b505060405163de02cde760e01b81526001600160a01b038516925063de02cde79150610bb0906000903390600401611f48565b600060405180830381600087803b158015610bca57600080fd5b505af1158015610bde573d6000803e3d6000fd5b5050604051631a1fc39360e21b81526001600160a01b038516925063687f0e4c9150610c11906000903090600401611f48565b600060405180830381600087803b158015610c2b57600080fd5b505af1158015610c3f573d6000803e3d6000fd5b5050600354604051634b6e6f9360e11b81526001600160a01b03600160301b9092049190911692506396dcdf269150610ca9908f908f9087906004016001600160d01b031993841681529190921660208201526001600160a01b0391909116604082015260600190565b600060405180830381600087803b158015610cc357600080fd5b505af1158015610cd7573d6000803e3d6000fd5b50506003546040516353eecb7760e01b8152600160301b9091046001600160a01b031692506353eecb779150610d15908f908d908d90600401611fa3565b600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b505060065460405163e343361560e01b81526001600160a01b03909116925063e34336159150610d799088908690600401611ed0565b602060405180830381600087803b158015610d9357600080fd5b505af1158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb9190611adc565b506006546040516304136ce760e31b81526000916001600160a01b03169063209b673890610dff9089908790600401611ed0565b60206040518083038186803b158015610e1757600080fd5b505afa158015610e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4f9190611adc565b9050600460009054906101000a90046001600160a01b03166001600160a01b03166333e6035a8e836040518363ffffffff1660e01b8152600401610e94929190611f80565b600060405180830381600087803b158015610eae57600080fd5b505af1158015610ec2573d6000803e3d6000fd5b5050505050505050505050505050505050565b60005b82518110156105a857610f0661057c848381518110610ef957610ef9612132565b6020026020010151611898565b610f225760405162461bcd60e51b81526004016103a890612065565b610f45838281518110610f3757610f37612132565b6020026020010151836118ba565b80610f4f81612109565b915050610ed8565b81610f6461057c82611898565b610f805760405162461bcd60e51b81526004016103a890612065565b6105a88383611929565b81610f9761057c82611898565b610fb35760405162461bcd60e51b81526004016103a890612065565b6105a883836119a8565b610fd36000356001600160e01b03191633611863565b610fef5760405162461bcd60e51b81526004016103a890612089565b6001600160a01b0385166110155760405162461bcd60e51b81526004016103a8906120b0565b60055460405163cf17b4e960e01b81526000916001600160a01b03169063cf17b4e990611046908a90600401611f6b565b60806040518083038186803b15801561105e57600080fd5b505afa158015611072573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110969190611e04565b50505090506000816001600160601b0316116110ee5760405162461bcd60e51b8152602060048201526017602482015276092dcd2e8d2c2d8d2f4ca40d2d8d640d2dc40aed2e8c6d604b1b60448201526064016103a8565b60035460405163477b5efd60e11b81526001600160d01b0319808b166004830152891660248201526001600160a01b03888116604483015263ffffffff88166064830152600160301b90920490911690638ef6bdfa90608401600060405180830381600087803b15801561116157600080fd5b505af1158015611175573d6000803e3d6000fd5b505060035460405163d3fc152b60e01b81526001600160d01b0319808d1660048301528b1660248201526001600160601b038816604482015262ffffff8716606482015260ff86166084820152600160301b9091046001600160a01b0316925063d3fc152b915060a401600060405180830381600087803b1580156111f957600080fd5b505af115801561120d573d6000803e3d6000fd5b5050600480546040516330705b1b60e11b8152600094506001600160a01b0390911692506360e0b63691611243918c9101611f6b565b60206040518083038186803b15801561125b57600080fd5b505afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112939190611adc565b60055460405163de02cde760e01b81529192506001600160a01b038084169263de02cde7926112d0926312e5ff7760e01b92911690600401611f48565b600060405180830381600087803b1580156112ea57600080fd5b505af11580156112fe573d6000803e3d6000fd5b50505050505050505050505050565b6113236000356001600160e01b03191633611863565b61133f5760405162461bcd60e51b81526004016103a890612089565b6001600160a01b0381166113865760405162461bcd60e51b815260206004820152600e60248201526d105cdcd95d081c995c5d5a5c995960921b60448201526064016103a8565b6003546040516339997e7960e21b8152600160301b9091046001600160a01b03169063e665f9e4906113be9085908590600401611f80565b600060405180830381600087803b1580156113d857600080fd5b505af11580156113ec573d6000803e3d6000fd5b505060075460405163d448c1c560e01b8152600093506001600160a01b03909116915063d448c1c590611423908590600401611ebc565b602060405180830381600087803b15801561143d57600080fd5b505af1158015611451573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114759190611adc565b604080516002808252606082018352929350600092909160208301908036833701905050905063ceae3abd60e01b816000815181106114b6576114b6612132565b6001600160e01b03199092166020928302919091019091015280516312e5ff7760e01b90829060019081106114ed576114ed612132565b6001600160e01b0319909216602092830291909101909101526004805460405163effae35360e01b81526001600160a01b038086169363effae3539361153a938793919091169101611eea565b600060405180830381600087803b15801561155457600080fd5b505af1158015611568573d6000803e3d6000fd5b505060405163de02cde760e01b81526001600160a01b038516925063de02cde7915061159b906000903390600401611f48565b600060405180830381600087803b1580156115b557600080fd5b505af11580156115c9573d6000803e3d6000fd5b5050600480546040516349c29d2b60e01b81526001600160a01b0390911693506349c29d2b92506115fe918891879101611f80565b600060405180830381600087803b15801561161857600080fd5b505af115801561162c573d6000803e3d6000fd5b5050505050505050565b60005b82518110156105a85761165a61057c848381518110610ef957610ef9612132565b6116765760405162461bcd60e51b81526004016103a890612065565b61169983828151811061168b5761168b612132565b6020026020010151836119a8565b806116a381612109565b915050611639565b6116c16000356001600160e01b03191633611863565b6116dd5760405162461bcd60e51b81526004016103a890612089565b6001600160a01b0381166117035760405162461bcd60e51b81526004016103a8906120b0565b600354604051630aae4fa960e31b8152600160301b9091046001600160a01b0316906355727d489061173b9085908590600401611f80565b600060405180830381600087803b15801561175557600080fd5b505af1158015611769573d6000803e3d6000fd5b5050600480546040516330705b1b60e11b8152600094506001600160a01b0390911692506360e0b6369161179f91879101611f6b565b60206040518083038186803b1580156117b757600080fd5b505afa1580156117cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ef9190611adc565b60055460405163de02cde760e01b81529192506001600160a01b038084169263de02cde79261182c9263ceae3abd60e01b92911690600401611f48565b600060405180830381600087803b15801561184657600080fd5b505af115801561185a573d6000803e3d6000fd5b50505050505050565b6001600160e01b031982166000908152602081815260408083206001600160a01b038516845290915290205460ff1692915050565b6001600160e01b03191660009081526020819052604090206001015460e01b90565b6118c48282611863565b156105e8576001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339391927f4ddc7b757e7bdd7254a9cd39452d307a52761bc824625c6a33104a075d8099e691a45050565b6001600160e01b0319811661193d83611898565b6001600160e01b031916146105e8576001600160e01b0319828116600081815260208190526040808220600101805463ffffffff191660e087901c17905551928416927fd348e2220a50b4500ec353f6e802d2f14dd1b5d6786148fd1bbcc570bf92d4739190a35050565b6119b28282611863565b6105e8576001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff1916600117905551339391927fe6231789d19137da31d0550f4ba9ee379020a8cfb64cb79bf1790c996d2e616591a45050565b8035611a248161215e565b919050565b80356001600160e01b031981168114611a2457600080fd5b80356001600160d01b031981168114611a2457600080fd5b600082601f830112611a6a57600080fd5b81356001600160401b03811115611a8357611a83612148565b611a96601f8201601f19166020016120d9565b818152846020838601011115611aab57600080fd5b816020850160208301376000918101602001919091529392505050565b803563ffffffff81168114611a2457600080fd5b600060208284031215611aee57600080fd5b815161036f8161215e565b60008060408385031215611b0c57600080fd5b82356001600160401b0380821115611b2357600080fd5b818501915085601f830112611b3757600080fd5b8135602082821115611b4b57611b4b612148565b8160051b9250611b5c8184016120d9565b8281528181019085830185870184018b1015611b7757600080fd5b600096505b84871015611ba157611b8d81611a29565b835260019690960195918301918301611b7c565b509650611bb19050878201611a19565b9450505050509250929050565b60008060408385031215611bd157600080fd5b823591506020830135611be38161215e565b809150509250929050565b600060208284031215611c0057600080fd5b61036f82611a29565b60008060408385031215611c1c57600080fd5b611c2583611a29565b91506020830135611be38161215e565b60008060408385031215611c4857600080fd5b611c5183611a29565b9150611c5f60208401611a29565b90509250929050565b60008060408385031215611c7b57600080fd5b611c2583611a41565b600080600080600080600060e0888a031215611c9f57600080fd5b611ca888611a41565b9650611cb660208901611a41565b95506040880135611cc68161215e565b9450611cd460608901611ac8565b93506080880135611ce481612196565b925060a0880135611cf481612176565b915060c0880135611d0481612187565b8091505092959891949750929550565b600080600080600080600060c0888a031215611d2f57600080fd5b611d3888611a41565b9650611d4660208901611a41565b9550611d5460408901611ac8565b945060608801356001600160401b0380821115611d7057600080fd5b818a0191508a601f830112611d8457600080fd5b813581811115611d9357600080fd5b8b60208260051b8501011115611da857600080fd5b6020830196508095505060808a0135915080821115611dc657600080fd5b611dd28b838c01611a59565b935060a08a0135915080821115611de857600080fd5b50611df58a828b01611a59565b91505092959891949750929550565b60008060008060808587031215611e1a57600080fd5b8451611e2581612196565b6020860151909450611e3681612176565b6040860151909350611e4781612187565b60608601519092506001600160801b0381168114611e6457600080fd5b939692955090935050565b6000815180845260005b81811015611e9557602081850181015186830182015201611e79565b81811115611ea7576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b604080825283519082018190526000906020906060840190828701845b82811015611f2d5781516001600160e01b03191684529284019290840190600101611f07565b5050506001600160a01b039490941692019190915250919050565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b6001600160d01b031991909116815260200190565b6001600160d01b03199290921682526001600160a01b0316602082015260400190565b6001600160d01b0319848116825260406020808401829052908301849052600091859160608501845b87811015611ff15783611fde86611a41565b1682529382019390820190600101611fcc565b5098975050505050505050565b6001600160d01b0319871681526001600160a01b0386811660208301528516604082015263ffffffff8416606082015260c06080820181905260009061204690830185611e6f565b82810360a08401526120588185611e6f565b9998505050505050505050565b6020808252600a908201526927b7363c9030b236b4b760b11b604082015260600190565b6020808252600d908201526c1058d8d95cdcc819195b9a5959609a1b604082015260600190565b6020808252600f908201526e13dc9858db19481c995c5d5a5c9959608a1b604082015260600190565b604051601f8201601f191681016001600160401b038111828210171561210157612101612148565b604052919050565b600060001982141561212b57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461217357600080fd5b50565b62ffffff8116811461217357600080fd5b60ff8116811461217357600080fd5b6001600160601b038116811461217357600080fdfea2646970667358221220afe65edcbee16293f6da043e6e0aa2c96f6b441af0bdc4cff4fe91e8d81223b864736f6c63430008060033",
  "devdoc": {
    "details": "Ladle orchestrates contract calls throughout the Yield Protocol v2 into useful and efficient governance features.",
    "kind": "dev",
    "methods": {
      "addAsset(bytes6,address)": {
        "details": "Add an existing asset to the protocol, meaning:  - Add the asset to the cauldron  - Deploy a new Join, and integrate it with the Ladle  - If the asset is a base, integrate its rate source  - If the asset is a base, integrate a spot source and set a debt ceiling for any provided ilks"
      },
      "addSeries(bytes6,bytes6,uint32,bytes6[],string,string)": {
        "details": "Add an existing series to the protocol, by deploying a FYToken, and registering it in the cauldron with the approved ilks This must be followed by a call to addPool"
      },
      "getRoleAdmin(bytes4)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes4,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "grantRoles(bytes4[],address)": {
        "details": "Grants all of `role` in `roles` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - For each `role` in `roles`, the caller must have ``role``'s admin role."
      },
      "hasRole(bytes4,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "lockRole(bytes4)": {
        "details": "Sets LOCK as ``role``'s admin role. LOCK has no members, so this disables admin management of ``role``. Emits a {RoleAdminChanged} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "makeBase(bytes6,address)": {
        "details": "Make a base asset out of a generic asset."
      },
      "makeIlk(bytes6,bytes6,address,uint32,uint96,uint24,uint8)": {
        "details": "Make an ilk asset out of a generic asset."
      },
      "point(bytes32,address)": {
        "details": "Point to a different cauldron, ladle, witch, poolFactory, joinFactory or fyTokenFactory"
      },
      "renounceRole(bytes4,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes4,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "revokeRoles(bytes4[],address)": {
        "details": "Revokes all of `role` in `roles` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - For each `role` in `roles`, the caller must have ``role``'s admin role."
      },
      "setRoleAdmin(bytes4,bytes4)": {
        "details": "Sets `adminRole` as ``role``'s admin role. If ``role``'s admin role is not `adminRole` emits a {RoleAdminChanged} event. Requirements: - the caller must have ``role``'s admin role."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "makeBase(bytes6,address)": {
        "notice": "`oracle` must be able to deliver a value for assetId and 'rate'"
      },
      "makeIlk(bytes6,bytes6,address,uint32,uint96,uint24,uint8)": {
        "notice": "`oracle` must be able to deliver a value for baseId and ilkId"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes4,t_struct(RoleData)10_storage)"
      },
      {
        "astId": 19721,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "CHI",
        "offset": 0,
        "slot": "1",
        "type": "t_bytes32"
      },
      {
        "astId": 19724,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "RATE",
        "offset": 0,
        "slot": "2",
        "type": "t_bytes32"
      },
      {
        "astId": 19727,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "ETH",
        "offset": 0,
        "slot": "3",
        "type": "t_bytes6"
      },
      {
        "astId": 16904,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "cauldron",
        "offset": 6,
        "slot": "3",
        "type": "t_contract(ICauldronGov)2649"
      },
      {
        "astId": 16907,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "ladle",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ILadleGov)2869"
      },
      {
        "astId": 16910,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "witch",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IWitchGov)16870"
      },
      {
        "astId": 16913,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "poolFactory",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IPoolFactory)3194"
      },
      {
        "astId": 16916,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "joinFactory",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(IJoinFactory)2783"
      },
      {
        "astId": 16919,
        "contract": "contracts/vault/Wand.sol:Wand",
        "label": "fyTokenFactory",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(IFYTokenFactory)2737"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_bytes6": {
        "encoding": "inplace",
        "label": "bytes6",
        "numberOfBytes": "6"
      },
      "t_contract(ICauldronGov)2649": {
        "encoding": "inplace",
        "label": "contract ICauldronGov",
        "numberOfBytes": "20"
      },
      "t_contract(IFYTokenFactory)2737": {
        "encoding": "inplace",
        "label": "contract IFYTokenFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IJoinFactory)2783": {
        "encoding": "inplace",
        "label": "contract IJoinFactory",
        "numberOfBytes": "20"
      },
      "t_contract(ILadleGov)2869": {
        "encoding": "inplace",
        "label": "contract ILadleGov",
        "numberOfBytes": "20"
      },
      "t_contract(IPoolFactory)3194": {
        "encoding": "inplace",
        "label": "contract IPoolFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IWitchGov)16870": {
        "encoding": "inplace",
        "label": "contract IWitchGov",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes4,t_struct(RoleData)10_storage)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)10_storage"
      },
      "t_struct(RoleData)10_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/vault/Wand.sol:Wand",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 9,
            "contract": "contracts/vault/Wand.sol:Wand",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes4"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}