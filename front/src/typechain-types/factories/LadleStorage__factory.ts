/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LadleStorage, LadleStorageInterface } from "../LadleStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICauldron",
        name: "cauldron_",
        type: "address",
      },
      {
        internalType: "contract IWETH9",
        name: "weth_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "FeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "integration",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "set",
        type: "bool",
      },
    ],
    name: "IntegrationAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes6",
        name: "assetId",
        type: "bytes6",
      },
      {
        indexed: true,
        internalType: "address",
        name: "join",
        type: "address",
      },
    ],
    name: "JoinAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "set",
        type: "bool",
      },
    ],
    name: "ModuleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes6",
        name: "seriesId",
        type: "bytes6",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "set",
        type: "bool",
      },
    ],
    name: "TokenAdded",
    type: "event",
  },
  {
    inputs: [],
    name: "borrowingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cauldron",
    outputs: [
      {
        internalType: "contract ICauldron",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "integrations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "",
        type: "bytes6",
      },
    ],
    name: "joins",
    outputs: [
      {
        internalType: "contract IJoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "modules",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "",
        type: "bytes6",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161084538038061084583398101604081905261002f91610097565b6001600160601b0319606083901b1660805260405161004d9061008a565b604051809103906000f080158015610069573d6000803e3d6000fd5b506001600160601b0319606091821b811660a05291901b1660c052506100e9565b610499806103ac83390190565b600080604083850312156100aa57600080fd5b82516100b5816100d1565b60208401519092506100c6816100d1565b809150509250929050565b6001600160a01b03811681146100e657600080fd5b50565b60805160601c60a05160601c60c05160601c61028c610120600039600060c5015260006101da01526000610144015261028c6000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806305e64794146100885780633fc8cef3146100c057806360e0b636146100ff5780638377be501461012857806397ff6a041461013f578063a8ee49fe14610166578063bf1025f314610189578063e4860339146101b2578063f887ea40146101d5575b600080fd5b6100ab6100963660046101fc565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100b7565b6100e761010d36600461022c565b6002602052600090815260409020546001600160a01b031681565b61013160005481565b6040519081526020016100b7565b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b6100ab6101743660046101fc565b60046020526000908152604090205460ff1681565b6100e761019736600461022c565b6003602052600090815260409020546001600160a01b031681565b6100ab6101c03660046101fc565b60066020526000908152604090205460ff1681565b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b60006020828403121561020e57600080fd5b81356001600160a01b038116811461022557600080fd5b9392505050565b60006020828403121561023e57600080fd5b81356001600160d01b03198116811461022557600080fdfea264697066735822122011322b2e7dffbf58603c3275224794fd239e74d7a6bd816e00260042f79b891a64736f6c6343000806003360a060405234801561001057600080fd5b5033606081901b608052610462610037600039600081816040015260ac01526104626000f3fe6080604052600436106100295760003560e01c80638da5cb5b1461002e578063c6f334121461007f575b600080fd5b34801561003a57600080fd5b506100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009261008d366004610254565b61009f565b60405161007691906103cc565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461010b5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b60448201526064015b60405180910390fd5b6001600160a01b0384163b61015d5760405162461bcd60e51b815260206004820152601860248201527715185c99d95d081a5cc81b9bdd08184818dbdb9d1c9858dd60421b6044820152606401610102565b6000846001600160a01b031684846040516101799291906103bc565b6000604051808303816000865af19150503d80600081146101b6576040519150601f19603f3d011682016040523d82523d6000602084013e6101bb565b606091505b5092509050806101e7576101ce826101ef565b60405162461bcd60e51b815260040161010291906103cc565b509392505050565b606060448251101561023457505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6004820191508180602001905181019061024e91906102e4565b92915050565b60008060006040848603121561026957600080fd5b83356001600160a01b038116811461028057600080fd5b925060208401356001600160401b038082111561029c57600080fd5b818601915086601f8301126102b057600080fd5b8135818111156102bf57600080fd5b8760208285010111156102d157600080fd5b6020830194508093505050509250925092565b6000602082840312156102f657600080fd5b81516001600160401b038082111561030d57600080fd5b818401915084601f83011261032157600080fd5b81518181111561033357610333610416565b604051601f8201601f19908116603f0116810190838211818310171561035b5761035b610416565b8160405282815287602084870101111561037457600080fd5b6103858360208301602088016103e6565b979650505050505050565b600081518084526103a88160208601602086016103e6565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b6020815260006103df6020830184610390565b9392505050565b60005b838110156104015781810151838201526020016103e9565b83811115610410576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122030697dbc78ab9fd900aad0f7eb3f0b83a2ef67a19cd9feaa295c6cb2f998f4ae64736f6c63430008060033";

type LadleStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LadleStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LadleStorage__factory extends ContractFactory {
  constructor(...args: LadleStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    cauldron_: string,
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LadleStorage> {
    return super.deploy(
      cauldron_,
      weth_,
      overrides || {}
    ) as Promise<LadleStorage>;
  }
  getDeployTransaction(
    cauldron_: string,
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(cauldron_, weth_, overrides || {});
  }
  attach(address: string): LadleStorage {
    return super.attach(address) as LadleStorage;
  }
  connect(signer: Signer): LadleStorage__factory {
    return super.connect(signer) as LadleStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LadleStorageInterface {
    return new utils.Interface(_abi) as LadleStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LadleStorage {
    return new Contract(address, _abi, signerOrProvider) as LadleStorage;
  }
}
