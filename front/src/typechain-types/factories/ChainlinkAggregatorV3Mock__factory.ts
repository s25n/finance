/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainlinkAggregatorV3Mock,
  ChainlinkAggregatorV3MockInterface,
} from "../ChainlinkAggregatorV3Mock";

const _abi = [
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff1916601217905534801561001d57600080fd5b506101288061002d6000396000f3fe6080604052348015600f57600080fd5b506004361060505760003560e01c8063313ce56714605557806391b7f5ed146078578063a035b1fe14608e578063b80777ea1460a3578063feaf968c1460ab575b600080fd5b60025460619060ff1681565b60405160ff90911681526020015b60405180910390f35b608c608336600460da565b60005542600155565b005b609660005481565b604051908152602001606f565b609660015481565b6000805460015460408051848152602081019390935282018390526060820152608081019190915260a001606f565b60006020828403121560eb57600080fd5b503591905056fea26469706673582212204b7cccae36f649a3bd2057dae439347e0f5af058f213d5e509924381be46da8564736f6c63430008060033";

type ChainlinkAggregatorV3MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkAggregatorV3MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkAggregatorV3Mock__factory extends ContractFactory {
  constructor(...args: ChainlinkAggregatorV3MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainlinkAggregatorV3Mock> {
    return super.deploy(overrides || {}) as Promise<ChainlinkAggregatorV3Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChainlinkAggregatorV3Mock {
    return super.attach(address) as ChainlinkAggregatorV3Mock;
  }
  connect(signer: Signer): ChainlinkAggregatorV3Mock__factory {
    return super.connect(signer) as ChainlinkAggregatorV3Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkAggregatorV3MockInterface {
    return new utils.Interface(_abi) as ChainlinkAggregatorV3MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkAggregatorV3Mock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkAggregatorV3Mock;
  }
}
